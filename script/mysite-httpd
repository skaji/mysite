#!perl
use strict;
use warnings;
use utf8;
use Cwd qw(abs_path);
use File::Basename qw(dirname);
use File::Spec::Functions qw(catdir);
my $base; BEGIN { $base = abs_path catdir(dirname(__FILE__), '..') }
use Plack::Builder;
use MySite::Web;

my $mode = MySite::Web->mode_name;

my $app = builder {
    enable 'NonPHP';
    enable 'Static', path => qr{^/static/}, root => $base;
    enable 'Static', path => qr{^/favicon\.ico$}, root => "$base/static";
    enable 'ReverseProxy';
    if ($mode eq 'production') {
        enable 'AccessLog::RotateLogs', logfile => "$base/logs/access_log.%Y%m%d";
    } elsif ($mode eq 'development') {
        enable 'AccessLog';
    }
    MySite::Web->to_app;
};

unless (caller) {
    require Getopt::Long;
    require Plack::Loader;
    my $p = Getopt::Long::Parser->new(
        config => [qw(posix_default no_ignore_case)]
    );
    $p->getoptions(
        'p|port=i'      => \(my $port = 3334),
        'max-workers=i' => \(my $max_workers = 4),
    );

    print scalar(localtime),
        ": start httpd with mode=$mode, port=$port, max_workers=$max_workers\n";

    my $loader = Plack::Loader->load('Starlet',
        port        => $port,
        host        => "0.0.0.0",
        max_workers => $max_workers,
    );
    $loader->run($app);
    exit;
}
return $app;
